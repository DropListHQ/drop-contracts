/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MerkleDropERC1155,
  MerkleDropERC1155Interface,
} from "../MerkleDropERC1155";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "claimStartedForToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimedBitMap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expiryTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "expiryTimestamp_",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "ipfsHash_",
        type: "bytes32",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ipfsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isExpired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokensLeft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506111cb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80639e34070f116100715780639e34070f1461018f578063ade6e2aa146101bf578063c623674f146101dd578063e302ab46146101fb578063ee25560b14610217578063fc0c546a14610247576100b4565b8063158ef93e146100b95780632eb4a7ab146100d75780632f13b60c146100f5578063504622c9146101135780635e7446d71461012f57806390cdbc101461015f575b600080fd5b6100c1610265565b6040516100ce91906108a3565b60405180910390f35b6100df610278565b6040516100ec91906108d7565b60405180910390f35b6100fd61027e565b60405161010a91906108a3565b60405180910390f35b61012d600480360381019061012891906109f5565b61028a565b005b61014960048036038101906101449190610aa4565b61059a565b6040516101569190610ae0565b60405180910390f35b61017960048036038101906101749190610aa4565b6105c3565b60405161018691906108a3565b60405180910390f35b6101a960048036038101906101a49190610aa4565b6105e2565b6040516101b691906108a3565b60405180910390f35b6101c7610638565b6040516101d49190610ae0565b60405180910390f35b6101e561063e565b6040516101f291906108d7565b60405180910390f35b61021560048036038101906102109190610b27565b610644565b005b610231600480360381019061022c9190610aa4565b61074d565b60405161023e9190610ae0565b60405180910390f35b61024f610765565b60405161025c9190610bb1565b60405180910390f35b600560149054906101000a900460ff1681565b60005481565b60006003544210905090565b61029261027e565b156102d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c990610c29565b60405180910390fd5b6102db876105e2565b1561031b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031290610cbb565b60405180910390fd5b60008787858888604051602001610336959493929190610d44565b60405160208183030381529060405280519060200120905061039c838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050506000548361078b565b6103db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d290610e15565b60405180910390fd5b600015156103e8886105c3565b15151415610415576001856103fd9190610e64565b60046000898152602001908152602001600020819055505b6000866104218961059a565b61042b9190610eba565b101561046c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046390610f3a565b60405180910390fd5b8560046000898152602001908152602001600020600082825461048f9190610eba565b9250508190555061049f886107a2565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16868a8a6040518563ffffffff1660e01b81526004016105229493929190610f91565b600060405180830381600087803b15801561053c57600080fd5b505af1158015610550573d6000803e3d6000fd5b50505050877fee0b8b0781df81efd732b637fff3a1f3ab388d58bcfe3547eb43bed7ee11169588888760405161058893929190610fe9565b60405180910390a25050505050505050565b6000600160046000848152602001908152602001600020546105bc9190610eba565b9050919050565b6000806004600084815260200190815260200160002054119050919050565b600080610100836105f3919061104f565b90506000610100846106059190611080565b90506000600660008481526020019081526020016000205490506000826001901b90508081831614945050505050919050565b60035481565b60025481565b600560149054906101000a900460ff1615610694576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068b906110fd565b60405180910390fd5b6001600560146101000a81548160ff02191690831515021790555083600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600081905550816003819055508060028190555084600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b60066020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008261079885846107fc565b1490509392505050565b6000610100826107b2919061104f565b90506000610100836107c49190611080565b9050806001901b6006600084815260200190815260200160002054176006600084815260200190815260200160002081905550505050565b60008082905060005b84518110156108665760008582815181106108235761082261111d565b5b602002602001015190508083116108455761083e8382610871565b9250610852565b61084f8184610871565b92505b50808061085e9061114c565b915050610805565b508091505092915050565b600082600052816020526040600020905092915050565b60008115159050919050565b61089d81610888565b82525050565b60006020820190506108b86000830184610894565b92915050565b6000819050919050565b6108d1816108be565b82525050565b60006020820190506108ec60008301846108c8565b92915050565b600080fd5b600080fd5b6000819050919050565b61090f816108fc565b811461091a57600080fd5b50565b60008135905061092c81610906565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061095d82610932565b9050919050565b61096d81610952565b811461097857600080fd5b50565b60008135905061098a81610964565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126109b5576109b4610990565b5b8235905067ffffffffffffffff8111156109d2576109d1610995565b5b6020830191508360208202830111156109ee576109ed61099a565b5b9250929050565b600080600080600080600060c0888a031215610a1457610a136108f2565b5b6000610a228a828b0161091d565b9750506020610a338a828b0161091d565b9650506040610a448a828b0161091d565b9550506060610a558a828b0161091d565b9450506080610a668a828b0161097b565b93505060a088013567ffffffffffffffff811115610a8757610a866108f7565b5b610a938a828b0161099f565b925092505092959891949750929550565b600060208284031215610aba57610ab96108f2565b5b6000610ac88482850161091d565b91505092915050565b610ada816108fc565b82525050565b6000602082019050610af56000830184610ad1565b92915050565b610b04816108be565b8114610b0f57600080fd5b50565b600081359050610b2181610afb565b92915050565b600080600080600060a08688031215610b4357610b426108f2565b5b6000610b518882890161097b565b9550506020610b628882890161097b565b9450506040610b7388828901610b12565b9350506060610b848882890161091d565b9250506080610b9588828901610b12565b9150509295509295909350565b610bab81610952565b82525050565b6000602082019050610bc66000830184610ba2565b92915050565b600082825260208201905092915050565b7f4d65726b6c6544726f703a2044726f7020657870657269656400000000000000600082015250565b6000610c13601983610bcc565b9150610c1e82610bdd565b602082019050919050565b60006020820190508181036000830152610c4281610c06565b9050919050565b7f4d65726b6c6544726f703a20546f6b656e20616c726561647920636c61696d6560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b6000610ca5602183610bcc565b9150610cb082610c49565b604082019050919050565b60006020820190508181036000830152610cd481610c98565b9050919050565b6000819050919050565b610cf6610cf1826108fc565b610cdb565b82525050565b60008160601b9050919050565b6000610d1482610cfc565b9050919050565b6000610d2682610d09565b9050919050565b610d3e610d3982610952565b610d1b565b82525050565b6000610d508288610ce5565b602082019150610d608287610ce5565b602082019150610d708286610d2d565b601482019150610d808285610ce5565b602082019150610d908284610ce5565b6020820191508190509695505050505050565b7f4d65726b6c654469737472696275746f723a20496e76616c69642070726f6f6660008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000610dff602183610bcc565b9150610e0a82610da3565b604082019050919050565b60006020820190508181036000830152610e2e81610df2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e6f826108fc565b9150610e7a836108fc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610eaf57610eae610e35565b5b828201905092915050565b6000610ec5826108fc565b9150610ed0836108fc565b925082821015610ee357610ee2610e35565b5b828203905092915050565b7f4e6f7420656e6f7567687420746f6b656e730000000000000000000000000000600082015250565b6000610f24601283610bcc565b9150610f2f82610eee565b602082019050919050565b60006020820190508181036000830152610f5381610f17565b9050919050565b600082825260208201905092915050565b50565b6000610f7b600083610f5a565b9150610f8682610f6b565b600082019050919050565b600060a082019050610fa66000830187610ba2565b610fb36020830186610ba2565b610fc06040830185610ad1565b610fcd6060830184610ad1565b8181036080830152610fde81610f6e565b905095945050505050565b6000606082019050610ffe6000830186610ad1565b61100b6020830185610ad1565b6110186040830184610ba2565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061105a826108fc565b9150611065836108fc565b92508261107557611074611020565b5b828204905092915050565b600061108b826108fc565b9150611096836108fc565b9250826110a6576110a5611020565b5b828206905092915050565b7f44726f7020616c726561647920696e697469616c697a65640000000000000000600082015250565b60006110e7601883610bcc565b91506110f2826110b1565b602082019050919050565b60006020820190508181036000830152611116816110da565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611157826108fc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561118a57611189610e35565b5b60018201905091905056fea2646970667358221220695cabcae7f5cd45eab084de26f6ba11b5cd16a3b25137a300d37fec6ee0d98864736f6c634300080a0033";

export class MerkleDropERC1155__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MerkleDropERC1155> {
    return super.deploy(overrides || {}) as Promise<MerkleDropERC1155>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MerkleDropERC1155 {
    return super.attach(address) as MerkleDropERC1155;
  }
  connect(signer: Signer): MerkleDropERC1155__factory {
    return super.connect(signer) as MerkleDropERC1155__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleDropERC1155Interface {
    return new utils.Interface(_abi) as MerkleDropERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerkleDropERC1155 {
    return new Contract(address, _abi, signerOrProvider) as MerkleDropERC1155;
  }
}
