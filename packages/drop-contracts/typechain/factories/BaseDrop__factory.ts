/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BaseDrop, BaseDropInterface } from "../BaseDrop";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimedBitMap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expiryTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "expiryTimestamp_",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "ipfsHash_",
        type: "bytes32",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ipfsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isExpired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e6c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80639e34070f116100715780639e34070f14610154578063ade6e2aa14610184578063c623674f146101a2578063e302ab46146101c0578063ee25560b146101dc578063fc0c546a1461020c576100a9565b806301ffc9a7146100ae578063158ef93e146100de5780632eb4a7ab146100fc5780632f13b60c1461011a578063504622c914610138575b600080fd5b6100c860048036038101906100c391906106c2565b61022a565b6040516100d5919061070a565b60405180910390f35b6100e6610294565b6040516100f3919061070a565b60405180910390f35b6101046102a7565b604051610111919061073e565b60405180910390f35b6101226102ad565b60405161012f919061070a565b60405180910390f35b610152600480360381019061014d9190610852565b6102b9565b005b61016e60048036038101906101699190610901565b610414565b60405161017b919061070a565b60405180910390f35b61018c61046a565b604051610199919061093d565b60405180910390f35b6101aa610470565b6040516101b7919061073e565b60405180910390f35b6101da60048036038101906101d59190610984565b610476565b005b6101f660048036038101906101f19190610901565b61057f565b604051610203919061093d565b60405180910390f35b610214610597565b6040516102219190610a0e565b60405180910390f35b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600460149054906101000a900460ff1681565b60005481565b60006003544210905090565b6102c16102ad565b15610301576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f890610a86565b60405180910390fd5b61030a87610414565b1561034a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034190610b18565b60405180910390fd5b60008787858888604051602001610365959493929190610ba1565b6040516020818303038152906040528051906020012090506103cb838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050600054836105bd565b61040a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040190610c72565b60405180910390fd5b5050505050505050565b600080610100836104259190610cf0565b90506000610100846104379190610d21565b90506000600560008481526020019081526020016000205490506000826001901b90508081831614945050505050919050565b60035481565b60025481565b600460149054906101000a900460ff16156104c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bd90610d9e565b60405180910390fd5b6001600460146101000a81548160ff02191690831515021790555083600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600081905550816003819055508060028190555084600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b60056020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000826105ca85846105d4565b1490509392505050565b60008082905060005b845181101561063e5760008582815181106105fb576105fa610dbe565b5b6020026020010151905080831161061d576106168382610649565b925061062a565b6106278184610649565b92505b50808061063690610ded565b9150506105dd565b508091505092915050565b600082600052816020526040600020905092915050565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61069f8161066a565b81146106aa57600080fd5b50565b6000813590506106bc81610696565b92915050565b6000602082840312156106d8576106d7610660565b5b60006106e6848285016106ad565b91505092915050565b60008115159050919050565b610704816106ef565b82525050565b600060208201905061071f60008301846106fb565b92915050565b6000819050919050565b61073881610725565b82525050565b6000602082019050610753600083018461072f565b92915050565b6000819050919050565b61076c81610759565b811461077757600080fd5b50565b60008135905061078981610763565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107ba8261078f565b9050919050565b6107ca816107af565b81146107d557600080fd5b50565b6000813590506107e7816107c1565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610812576108116107ed565b5b8235905067ffffffffffffffff81111561082f5761082e6107f2565b5b60208301915083602082028301111561084b5761084a6107f7565b5b9250929050565b600080600080600080600060c0888a03121561087157610870610660565b5b600061087f8a828b0161077a565b97505060206108908a828b0161077a565b96505060406108a18a828b0161077a565b95505060606108b28a828b0161077a565b94505060806108c38a828b016107d8565b93505060a088013567ffffffffffffffff8111156108e4576108e3610665565b5b6108f08a828b016107fc565b925092505092959891949750929550565b60006020828403121561091757610916610660565b5b60006109258482850161077a565b91505092915050565b61093781610759565b82525050565b6000602082019050610952600083018461092e565b92915050565b61096181610725565b811461096c57600080fd5b50565b60008135905061097e81610958565b92915050565b600080600080600060a086880312156109a05761099f610660565b5b60006109ae888289016107d8565b95505060206109bf888289016107d8565b94505060406109d08882890161096f565b93505060606109e18882890161077a565b92505060806109f28882890161096f565b9150509295509295909350565b610a08816107af565b82525050565b6000602082019050610a2360008301846109ff565b92915050565b600082825260208201905092915050565b7f4d65726b6c6544726f703a2044726f7020657870657269656400000000000000600082015250565b6000610a70601983610a29565b9150610a7b82610a3a565b602082019050919050565b60006020820190508181036000830152610a9f81610a63565b9050919050565b7f4d65726b6c6544726f703a20546f6b656e20616c726561647920636c61696d6560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b6000610b02602183610a29565b9150610b0d82610aa6565b604082019050919050565b60006020820190508181036000830152610b3181610af5565b9050919050565b6000819050919050565b610b53610b4e82610759565b610b38565b82525050565b60008160601b9050919050565b6000610b7182610b59565b9050919050565b6000610b8382610b66565b9050919050565b610b9b610b96826107af565b610b78565b82525050565b6000610bad8288610b42565b602082019150610bbd8287610b42565b602082019150610bcd8286610b8a565b601482019150610bdd8285610b42565b602082019150610bed8284610b42565b6020820191508190509695505050505050565b7f4d65726b6c654469737472696275746f723a20496e76616c69642070726f6f6660008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000610c5c602183610a29565b9150610c6782610c00565b604082019050919050565b60006020820190508181036000830152610c8b81610c4f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cfb82610759565b9150610d0683610759565b925082610d1657610d15610c92565b5b828204905092915050565b6000610d2c82610759565b9150610d3783610759565b925082610d4757610d46610c92565b5b828206905092915050565b7f44726f7020616c726561647920696e697469616c697a65640000000000000000600082015250565b6000610d88601883610a29565b9150610d9382610d52565b602082019050919050565b60006020820190508181036000830152610db781610d7b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610df882610759565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e2b57610e2a610cc1565b5b60018201905091905056fea2646970667358221220193f8c6579fe45594d006fa0a1b68197b314a9a96c8e35ffc78c569a244aa1b564736f6c634300080a0033";

export class BaseDrop__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BaseDrop> {
    return super.deploy(overrides || {}) as Promise<BaseDrop>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BaseDrop {
    return super.attach(address) as BaseDrop;
  }
  connect(signer: Signer): BaseDrop__factory {
    return super.connect(signer) as BaseDrop__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseDropInterface {
    return new utils.Interface(_abi) as BaseDropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseDrop {
    return new Contract(address, _abi, signerOrProvider) as BaseDrop;
  }
}
